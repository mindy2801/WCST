class(school.ff)
str(school.ff)
sum(school.ff[,1],na.rm=T)
View(school.ff)
sum(as.numeric(school.ff[,1]),na.rm=T)
#ffdf
library(ff)
school.ff <- read.csv.ffdf(file="C:/Users/desk1/Desktop/정효림/numeric_SAT_Results2014.csv", header=T)
class(school.ff)
str(school.ff)
sum(as.numeric(school.ff[,1]),na.rm=T)
school.ff <- read.csv.ffdf(file="C:/Users/desk1/Desktop/정효림/numeric_SAT_Results2014.csv", header=F)
class(school.ff)
str(school.ff)
sum(as.numeric(school.ff[,1]),na.rm=T)
c(1,2,4)^2
a <- matrix(1, nrow=2, ncol=2)
a
b <- matrix(c(1,2,3,4), nrow=2, ncol=2)
b
a*b
a<-b
a*b
a<-array(0,c(3,4,2))
a
a[1,,1]
6+6
A+B
6+6
A<-9
B<-12
A+B
getwd()
wd <- "C:/Users/desk1/Desktop"
wd <- "C:/Users/desk1/Desktop/WCST-master"
setwd(wd)
rm(list=ls())
list()
dir()
#calculate categories completed
subj_catecom <- c()
datname="choices correct Bechara SDIandcontrols.txt"
maxiter=100 				#Number of starting parameters to iterate through; default is 100
modelstorun=5    #lists the nested models that'll be run; #5 is the default, best fitting model in article; use "modelstorun=1:24" to run all (slower)
parbounds=c(0,0,.01,.01,1,1,5,5)  #lower boundaries for parameters r, p, d, i and upper boundaries for parameters r, p, d, i
#############################
if(sum(rownames(installed.packages())=="fOptions")==0)   #If the fOptions package is not installed, .
install.packages("fOptions") 				#.install it now.
library(fOptions)  						#load fOptions into memory.
rawdatamat=read.table(datname,encoding="UTF-8")
#If you receive an error after this line, then the datafile isn't being read in properly.
#One possible problem is that the datafile doesn't have UTF-8 Encoding.
#One solution is to use the Notepad program to resave the datafile.
#At the bottom of the Save dialog window, next to "Encoding:", choose "UTF-8" before saving the datafile.
#If that does not fix the problem, try opening the file in MS Word (using windows default encoding),
#delete the unusual characters, and then resave it (again using windows default encoding).
rawdatamat[,257] <- 1:88
rawdatamat[,258] <- c(rep("SDI",39),rep("Control", 88-39))
subjlabels=rawdatamat[,257]				#reads extra information in datafile if available
subjgroup= rawdatamat[,258]
subjectsmodeled=1:length(rawdatamat[,1])
subjectsmodeled
for (subj in subjectsmodeled){
inf <- data.frame(rawdatamat[subj,129:(128+lengthvec[subj])])
catecom=0
locvec <- which(inf==0)
for(i in 1:(length(locvec)-1)) {
if(sum(inf[locvec[i]:locvec[i+1]])>=10){catecom=catecom+1}
if((i == (length(locvec)-1)) & sum(inf[locvec[i+1]:length(inf)])==10){catecom=catecom+1}
}
subj_catecom[subj] <- catecom
}
lengthvec=128-rowSums(rawdatamat[,1:128]==0) #number of trials
lengthvec
for (subj in subjectsmodeled){
inf <- data.frame(rawdatamat[subj,129:(128+lengthvec[subj])])
catecom=0
locvec <- which(inf==0)
for(i in 1:(length(locvec)-1)) {
if(sum(inf[locvec[i]:locvec[i+1]])>=10){catecom=catecom+1}
if((i == (length(locvec)-1)) & sum(inf[locvec[i+1]:length(inf)])==10){catecom=catecom+1}
}
subj_catecom[subj] <- catecom
}
subj_catecom
##data frame
control_catecom <- subj_catecom[1:39]
sdi_catecom <- mean(subj_catecom[40:88])
data.frame(group=c("Control", "SDI"), score=rep("Categoreis Completed",2), value=c(control_catecom, sdi_catecom))
subj_catecom_dat <- data.frame(group=c("Control", "SDI"), score=rep("Categoreis Completed",2), value=c(control_catecom, sdi_catecom))
subj_catecom_dat
control_catecom
##data frame
sdi_catecom <- subj_catecom[1:39]
control_catecom <- mean(subj_catecom[40:88])
subj_catecom_dat <- data.frame(group=c(rep("SDI", 39), rep("Control",88-39)), score=rep("Categoreis Completed",88), value=c(control_catecom, sdi_catecom))
88-39
subj_catecom_dat <- data.frame(group=c(rep("SDI", 39), rep("Control",88-39)), score=rep("Categoreis Completed",88), value=subjcatecom))
subj_catecom_dat <- data.frame(group=c(rep("SDI", 39), rep("Control",88-39)), score=rep("Categoreis Completed",88), value=subj_catecom))
subj_catecom_dat <- data.frame(group=c(rep("SDI", 39), rep("Control",88-39)), score=rep("Categoreis Completed",88), value=subj_catecom)
subj_catecom_dat
#failure to maintain set
subj_failure <- c()
for (subj in subjectsmodeled){
inf <- data.frame(rawdatamat[subj,129:(128+lengthvec[subj])])
failure=0
locvec <- which(inf==0)
for(i in 1:(length(locvec)-1)) {
if((sum(inf[locvec[i]:locvec[i+1]])<10 & sum(inf[locvec[i]:locvec[i+1]]) >= 5)){failure = failure+1}
}
subj_failure[subj] <- failure
}
subj_failure
##data frame
sdi_catecom <- mean(subj_catecom[1:39])
control_catecom <- mean(subj_catecom[40:88])
subj_catecom_dat <- data.frame(group=c("SDI", "Control"), score=rep("Categoreis Completed",2), value=subj_catecom)
subj_catecom_dat
mean_catecom <- c(sdi_catecom, control_catecom)
subj_catecom_dat <- data.frame(group=c("SDI", "Control"), score=rep("Categoreis Completed",2), value=mean_catecom)
subj_catecom_dat
##data frame
sdi_failure <- mean(subj_failure[1:39])
control_failure <- mean(subj_failure[40:88])
mean_failure <- c(sdi_failure, control_failure)
subj_failure_dat <- data.frame(group=c("SDI", "Control"), score=rep("Set Failures",2), value=mean_failure)
subj_catecom
subj_failure_dat
#integrate
catecom_sd <- c(sd(subj_catecom[1:39]),sd(subj_catecom[40:88]))
catecom_sd
failure_sd <- c(sd(subj_failure[1:39]),sd(subj_failure[40:88]))
total <- rbind(subj_catecom, subj_failure);
total
total <- rbind(subj_catecom_dat, subj_failure_dat)
total
rbind(catecom_sd, failure_sd)
c(catecom_sd, failure_sd)
sd <- c(catecom_sd, failure_sd)
cbind(total, sd)
total2 <- cbind(total, sd)
total2
total <- rbind(subj_catecom_dat, subj_failure_dat); total <- cbind(total, sd)
total
library(ggplot2)
bp <- ggplot(total, aes(x=score, y=value, fill=group)) +
geom_bar(colour="black", stat="identity", position=position_dodge(), width=0.5) +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=0.1,
position=position_dodge(.5))
bp + labs(title="(A) Observed Data", x="", y="Observed Value") +
scale_fill_manual(values=c('black','white'), guide = guide_legend(title=NULL)) +
theme_classic() +
theme(legend.position = c(0.75,0.75))
bp
library(ggplot2)
bp <- ggplot(total, aes(x=score, y=value, fill=group)) +
geom_bar(colour="black", stat="identity", position=position_dodge(), width=0.5) +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=0.1,
position=position_dodge(.5))
bp + labs(title="(A) Observed Data", x="", y="Observed Value") +
scale_fill_manual(values=c('black','white'), guide = guide_legend(title=NULL)) +
theme_classic() +
theme(legend.position = c(0.75,0.75))
#scale_y_continuous(expand = c(0, 0), limits = c(0, 6.5)) for deleting the space of x-axis. It cuases problem now because of 0 value of "Set Failures"
bp
bp <- ggplot(total, aes(x=score, y=value, fill=group)) +
geom_bar(colour="black", stat="identity", position=position_dodge(), width=0.5) +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=0.1,
position=position_dodge(.5))
bp + labs(title="(A) Observed Data", x="", y="Observed Value") +
scale_fill_manual(values=c('black','white'), guide = guide_legend(title=NULL)) +
theme_classic() +
theme(legend.position = c(0.75,0.75)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 6.5)) #for deleting the space of x-axis. It cuases problem now because of 0 value of "Set Failures"
bp
bp
bp <- ggplot(total, aes(x=score, y=value, fill=group)) +
geom_bar(colour="black", stat="identity", position=position_dodge(), width=0.5) +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=0.1,
position=position_dodge(.5))
bp + labs(title="(A) Observed Data", x="", y="Observed Value") +
scale_fill_manual(values=c('black','white'), guide = guide_legend(title=NULL)) +
theme_classic() +
theme(legend.position = c(0.75,0.75)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 6.5)) #for deleting the space of x-axis. It cuases problem now because of 0 value of "Set Failures"
bp
bp
load("C:/Users/CCSLAB1/Desktop/WCST/Code17b_choice_s1-88_iter100.Rdata")
load("Code17b_WCST S_s1-3_iter100.Rdata")
library(ggplot2)
bp <- ggplot(total, aes(x=score, y=value, fill=group)) +
geom_bar(colour="black", stat="identity", position=position_dodge(), width=0.5) +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=0.1,
position=position_dodge(.5))
#calculate categories completed
subj_catecom <- c()
for (subj in subjectsmodeled){
inf <- data.frame(rawdatamat[subj,129:(128+lengthvec[subj])])
catecom=0
locvec <- which(inf==0)
for(i in 1:(length(locvec)-1)) {
if(sum(inf[locvec[i]:locvec[i+1]])>=10){catecom=catecom+1}
if((i == (length(locvec)-1)) & sum(inf[locvec[i+1]:length(inf)])==10){catecom=catecom+1}
}
subj_catecom[subj] <- catecom
}
##data frame
sdi_catecom <- mean(subj_catecom[1:39])
control_catecom <- mean(subj_catecom[40:88])
mean_catecom <- c(sdi_catecom, control_catecom)
subj_catecom_dat <- data.frame(group=c("SDI", "Control"), score=rep("Categoreis Completed",2), value=mean_catecom)
#persev.error
print("Not Ready Yet...have to see how to calculate this error")
#nonpersev.error
print("Not Ready Yet...have to see how to calculate this error")
#failure to maintain set
subj_failure <- c()
for (subj in subjectsmodeled){
inf <- data.frame(rawdatamat[subj,129:(128+lengthvec[subj])])
failure=0
locvec <- which(inf==0)
for(i in 1:(length(locvec)-1)) {
if((sum(inf[locvec[i]:locvec[i+1]])<10 & sum(inf[locvec[i]:locvec[i+1]]) >= 5)){failure = failure+1}
}
subj_failure[subj] <- failure
}
##data frame
sdi_failure <- mean(subj_failure[1:39])
control_failure <- mean(subj_failure[40:88])
mean_failure <- c(sdi_failure, control_failure)
subj_failure_dat <- data.frame(group=c("SDI", "Control"), score=rep("Set Failures",2), value=mean_failure)
#integrate
catecom_sd <- c(sd(subj_catecom[1:39]),sd(subj_catecom[40:88]))
failure_sd <- c(sd(subj_failure[1:39]),sd(subj_failure[40:88]))
sd <- c(catecom_sd, failure_sd)
total <- rbind(subj_catecom_dat, subj_failure_dat); total <- cbind(total, sd)
total
bp <- ggplot(total, aes(x=score, y=value, fill=group)) +
geom_bar(colour="black", stat="identity", position=position_dodge(), width=0.5) +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=0.1,
position=position_dodge(.5))
bp + labs(title="(A) Observed Data", x="", y="Observed Value") +
scale_fill_manual(values=c('black','white'), guide = guide_legend(title=NULL)) +
theme_classic() +
theme(legend.position = c(0.75,0.75)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 6.5)) #for deleting the space of x-axis. It cuases problem now because of 0 value of "Set Failures"
bp + labs(title="(A) Observed Data", x="", y="Observed Value") +
scale_fill_manual(values=c('black','white'), guide = guide_legend(title=NULL)) +
theme_classic() +
theme(legend.position = c(0.75,0.75))
bp <- ggplot(total, aes(x=score, y=value, fill=group)) +
geom_bar(colour="black", stat="identity", position=position_dodge(), width=0.5) +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=0.1,
position=position_dodge(.5))
bp + labs(title="(A) Observed Data", x="", y="Observed Value") +
scale_fill_manual(values=c('black','white'), guide = guide_legend(title=NULL)) +
theme_classic() +
theme(legend.position = c(0.75,0.75))
load("rpd1_Code17b_WCST S_s1-3_iter100.Rdata")
load("rpd1_Code17b_WCST S_s1-88_iter100.Rdata")
load("C:/Users/CCSLAB1/Desktop/WCST/rpd1_Code17b_choice_s1-88_iter100.Rdata")
rm(list=ls())
load("rrpd1_Code17b_choice_s1-88_iter100.Rdata")
load("rpd1_Code17b_choice_s1-88_iter100.Rdata")
parstack
dim(parstack)
parstack[,,1]
parstack[,,5]
meanPar <- colSums(parstack[,,5]);
meanPar
##Table.3.2
control <- parstack[1:39,,5]
SDI <- colMeans(parstack[40:88,,5])
control
?colSums
pars_summary <- cbind(parstack[,,5],as.factor(c(rep("SDI", 39),rep("Control", 88))))
pars_summary <- cbind(parstack[,,5],as.factor(c(rep("SDI", 39),rep("Control", 49))))
pars_summary
pars_summary <- cbind(parstack[,,5],group=as.factor(c(rep("SDI", 39),rep("Control", 49))))
pars_summary$group
pars_summary[,"group"]
pars_summary <- cbind(parstack[,,5],group=c(rep("SDI", 39),rep("Control", 49)))
pars_summary
pars_summary <- cbind(parstack[,,5],group=as.factor(c(rep("SDI", 39),rep("Control", 49))))
str(pars_summary)
dimnmaes(pars_summary)
dimnames(pars_summary)
pars_summary[,5]
levels(pars_summary[,5])
pars_summary <- cbind(parstack[,,5],group=as.factor(c(rep(1, 39),rep(2, 49))))
levels(pars_summary[,5])
levels(pars_summary[,"group"])
class(pars_summary[,5])
pars_summary[,5]
as.factor(pars_summary[,5])
class(pars_summary)
levels(pars_summary[,"group"])
factor(c(rep(1, 39),rep(2, 49))
)
pars_summary <- cbind(parstack[,,5],group=factor(c(rep(1, 39),rep(2, 49))))
pars_summary
pars_summary[,5]
?aggregate
?tapply
?sapply
?lapply
##Table.3.1
aggregate(.~group, data=pars_summary, FUN=sum)
##Table.3.1
aggregate(.~group, data=as.data.frame(pars_summary), FUN=sum)
##Table.3.1
meanPars <- aggregate(.~group, data=as.data.frame(pars_summary), FUN=sum)
meanPars
gname <- c("SDI", "Control")
colnames[meanPars[,1]]
colnames(meanPars[,1])
colnames(meanPars[,1]) <- gname
meanPars[,1] <- gname
menaPars
meanPars
pars_summary
median(c(1,3,4))
stderr(c(1,3,4))
sd(c(1,3,4))
medPars <- aggregate(.~group, data=as.data.frame(pars_summary), FUN=median)
sdPars <- aggregate(.~group, data=as.data.frame(pars_summary), FUN=sd)
medPars
pars_summary <- rbind(meanPars, medPars, sdPars)
pars_summary
meanPars[,1] <- rep(gname,3)
gname
pars_summary[,1] <- rep(gname,3)
pars_summary
pars_summary[,1] <- factor(rep(gname,3))
pars_summary
pars_summary[,1]
library(knitr)
library(kableExtra)
kable(pars_summary, format = "html",caption = "Table 3", align="l") %>%
kable_styling(bootstrap_options = "striped",
full_width = F) %>%
add_header_above(c("Group"=1, "Parameters" = 3)) %>%
group_rows("Mean", 1,2)
kable(pars_summary, format = "html",caption = "Table 3", align="l") %>%
kable_styling(bootstrap_options = "striped",
full_width = F) %>%
add_header_above(c("Group"=1, "Parameters" = 4)) %>%
group_rows("Mean", 1,2)
pars_summary
##Table 3
meanPars <- aggregate(.~group, data=as.data.frame(pars_summary), FUN=mean)
pars_summary <- rbind(meanPars, medPars, sdPars)
pars_summary
pars_summary <- rbind(meanPars, medPars, sdPars)
pars_summary[,1] <- factor(rep(gname,3))
kable(pars_summary, format = "html",caption = "Table 3", align="l") %>%
kable_styling(bootstrap_options = "striped",
full_width = F) %>%
add_header_above(c("Group"=1, "Parameters" = 4)) %>%
group_rows("Mean", 1,2) %>% group_rows("Median",3,2) %>% group_rows("Standard deviation", 5,2)
kable(pars_summary, format = "html",caption = "Table 3", align="l") %>%
kable_styling(bootstrap_options = "striped",
full_width = F) %>%
add_header_above(c("Group"=1, "Parameters" = 4)) %>%
group_rows("Mean", 1,2) %>% group_rows("Median",3,4) %>% group_rows("Standard deviation", 5,6)
pars_summary
pars_rpd1 <- cbind(parstack[,,5],group=factor(c(rep(1, 39),rep(2, 49))))
gname <- c("SDI", "Control")
##Table 3
meanPars <- aggregate(.~group, data=as.data.frame(pars_rpd1), FUN=mean)
medPars <- aggregate(.~group, data=as.data.frame(pars_rpd1), FUN=median)
sdPars <- aggregate(.~group, data=as.data.frame(pars_rpd1), FUN=sd)
pars_summary <- rbind(meanPars, medPars, sdPars)
pars_summary[,1] <- factor(rep(gname,3))
pars_summary
kable(pars_summary, format = "html",caption = "Table 3", align="l") %>%
kable_styling(bootstrap_options = "striped",
full_width = F) %>%
add_header_above(c("Group"=1, "Parameters" = 4)) %>%
group_rows("Mean", 1,2) %>% group_rows("Median",3,4) %>% group_rows("Standard deviation", 5,6)
?kable
kable(pars_summary, format = "html",, col.names = ("", "r", "p", "d", "i")caption = "Table 3", align="l") %>%
kable(pars_summary, format = "html",col.names = ("", "r", "p", "d", "i"), caption = "Table 3", align="l") %>%
kable(pars_summary, format = "html",col.names = c("", "r", "p", "d", "i"), caption = "Table 3", align="l") %>%
kable_styling(bootstrap_options = "striped",
full_width = F) %>%
add_header_above(c("Group"=1, "Parameters" = 4)) %>%
group_rows("Mean", 1,2) %>% group_rows("Median",3,4) %>% group_rows("Standard deviation", 5,6)
pars_summary
round(pars_summary)
round(pars_summary[,2:5])
round(meanPars,3)
round(meanPars,2)
pars_summary <- rbind(round(meanPars,2), round(medPars,2), round(sdPars,2))
pars_summary[,1] <- factor(rep(gname,3))
pars_summary
kable(pars_summary, format = "html",col.names = c("", "r", "p", "d", "i"), caption = "Table 3", align="l") %>%
kable_styling(bootstrap_options = "striped",
full_width = F) %>%
add_header_above(c("Group"=1, "Parameters" = 4)) %>%
group_rows("Mean", 1,2) %>% group_rows("Median",3,4) %>% group_rows("Standard deviation", 5,6)
kable(pars_summary, format = "html",col.names = c("", "r", "p", "d", "i"), caption = "Table 3 \n Mean", align="l") %>%
kable_styling(bootstrap_options = "striped",
full_width = F) %>%
add_header_above(c("Group"=1, "Parameters" = 4)) %>%
group_rows("Mean", 1,2) %>% group_rows("Median",3,4) %>% group_rows("Standard deviation", 5,6)
?sort
?order
?sort
kable(pars_summary, format = "html",col.names = c("", "r", "p", "d", "i"), caption = "Table 3 \n\ Mean", align="l") %>%
kable_styling(bootstrap_options = "striped",
full_width = F) %>%
add_header_above(c("Group"=1, "Parameters" = 4)) %>%
group_rows("Mean", 1,2) %>% group_rows("Median",3,4) %>% group_rows("Standard deviation", 5,6)
kable(pars_summary, format = "html",col.names = c("", "r", "p", "d", "i"), caption = "Table 3 \n\n Mean", align="l") %>%
kable_styling(bootstrap_options = "striped",
full_width = F) %>%
add_header_above(c("Group"=1, "Parameters" = 4)) %>%
group_rows("Mean", 1,2) %>% group_rows("Median",3,4) %>% group_rows("Standard deviation", 5,6)
kable(pars_summary, format = "html",col.names = c("", "r", "p", "d", "i"), caption = "Table 3", align="l") %>%
kable_styling(bootstrap_options = "striped",
full_width = F) %>%
add_header_above(c("Group"=1, "Parameters" = 4)) %>%
group_rows("Mean", 1,2) %>% group_rows("Median",3,4) %>% group_rows("Standard deviation", 5,6)
pars_summary
pars_summary[c(2,1,4,3,6,5)]
pars_summary[c(2,1,4,3,6,5),]
pars_summary <- pars_summary[c(2,1,4,3,6,5),]
kable(pars_summary, format = "html",col.names = c("", "r", "p", "d", "i"), caption = "Table 3", align="l") %>%
kable_styling(bootstrap_options = "striped",
full_width = F) %>%
add_header_above(c("Group"=1, "Parameters" = 4)) %>%
group_rows("Mean", 1,2) %>% group_rows("Median",3,4) %>% group_rows("Standard deviation", 5,6)
pars_summary
menaPars
meanPars
pras_rpdi
pras_rpd1
pars_rpd1
pars_rpd1 <- pars_rpd1[c(40:88,1:39),]
pars_rpd1
gname <- c("Control", "SDI")
##Table 3
meanPars <- aggregate(.~group, data=as.data.frame(pars_rpd1), FUN=mean)
medPars <- aggregate(.~group, data=as.data.frame(pars_rpd1), FUN=median)
sdPars <- aggregate(.~group, data=as.data.frame(pars_rpd1), FUN=sd)
pars_summary <- rbind(round(meanPars,2), round(medPars,2), round(sdPars,2))
pars_summary[,1] <- factor(rep(gname,3))
pasr_summary
pars_summary
kable(pars_summary, format = "html",col.names = c("", "r", "p", "d", "i"), caption = "Table 3", align="l") %>%
kable_styling(bootstrap_options = "striped",
full_width = F) %>%
add_header_above(c("Group"=1, "Parameters" = 4)) %>%
group_rows("Mean", 1,2) %>% group_rows("Median",3,4) %>% group_rows("Standard deviation", 5,6)
meanPars
pars_rdp1
pars_rpd1
pars_rpd1 <- cbind(parstack[,,5],group=factor(c(rep(1, 39),rep(2, 49))))
pars_rpd1
##Table 3
meanPars <- aggregate(.~group, data=as.data.frame(pars_rpd1), FUN=mean)
menaPars
meanPars
pars_rpd1 <- pars_rpd1[c(40:88,1:39),]
pars_rpd1
##Table 3
meanPars <- aggregate(.~group, data=as.data.frame(pars_rpd1), FUN=mean)
meanPars
as.data.frame(pars_rpd1)
rm(list=ls())
load("rpd1_Code17b_choice_s1-88_iter100.Rdata")
pars_rpd1 <- cbind(parstack[,,5],group=factor(c(rep(1, 39),rep(2, 49))))
pars_rpd1
pars_rpd1 <- pars_rpd1[c(40:88,1:39),]
pars_rpd1[1,]
pars_rpd1[2,]
pars_rpd1[88,]
pars_rpd1
pars_rpd1 <- cbind(parstack[,,5],group=factor(c(rep(2, 39),rep(1, 49))))
pars_rpd1 <- pars_rpd1[c(40:88,1:39),]
gname <- c("Control", "SDI")
pars_rpd1
##Table 3
meanPars <- aggregate(.~group, data=as.data.frame(pars_rpd1), FUN=mean)
meanPars
medPars <- aggregate(.~group, data=as.data.frame(pars_rpd1), FUN=median)
sdPars <- aggregate(.~group, data=as.data.frame(pars_rpd1), FUN=sd)
pars_summary <- rbind(round(meanPars,2), round(medPars,2), round(sdPars,2))
pars_summary[,1] <- factor(rep(gname,3))
pars_summary
View(sdPars)
kable(pars_summary, format = "html",col.names = c("", "r", "p", "d", "i"), caption = "Table 3", align="l") %>%
kable_styling(bootstrap_options = "striped",
full_width = F) %>%
add_header_above(c("Group"=1, "Parameters" = 4)) %>%
group_rows("Mean", 1,2) %>% group_rows("Median",3,4) %>% group_rows("Standard deviation", 5,6)
?ttest
?t.test
t.test(pars_rpd1[1:49,],pars_rpd1[50:88,])
t.test(pars_rpd1[1:49,2],pars_rpd1[50:88,2])
pars_rpd1[50:88,2]
t.test(pars_rpd1[1:49,1],pars_rpd1[50:88,1])
t.test(pars_rpd1[1:49,3],pars_rpd1[50:88,3])
t.test(pars_rpd1[1:49,2],pars_rpd1[50:88,2])
kable(pars_summary, format = "html",col.names = c("", "r", "p", "d", "i"), caption = "Table 3", align="l") %>%
kable_styling(bootstrap_options = "striped",
full_width = F) %>%
add_header_above(c("Group"=1, "Parameters" = 4)) %>%
group_rows("Mean", 1,2) %>% group_rows("Median",3,4) %>% group_rows("Standard deviation", 5,6)
2LLstack <- array(NA, c(maxsubj, maxiter, 1))
rawdatamat
